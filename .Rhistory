path <- "/project/CRUP_scores/RNA-seq"
samples <- system(paste("ls", path , sep = " "), intern= T)
for(tissue in samples[1:3]){
path2 <- paste(path, tissue, sep = "/")
experimentname <- system(paste("ls", path2 , sep = " "), intern= T)
path3 <- paste(path2, experimentname, "released/GRCh38/gene_quantifications/tsv", sep = "/")
reps <- system(paste("ls", path3 , sep = " "), intern= T)
print(reps)
if (length(reps) == 1){
fileacc <- system(paste("ls", paste(path3,reps, sep ="/" ), sep = " "), intern= T)
pathfile <- paste(path3,reps,fileacc ,sep ="/" )
pathfilecopy <- paste(path, experimentname, paste(experimentname, ".tsv", sep=""), sep= "/")
system(paste("cp", pathfile, pathfilecopy ))
}
else if (length(reps==2)){
fileacc1 <- system(paste("ls", paste(path3,reps[1], sep ="/" ), sep = " "), intern= T)
fileacc2 <- system(paste("ls", paste(path3,reps[2], sep ="/" ), sep = " "), intern= T)
pathfile1 <- paste(path3, reps[1], fileacc1, sep = "/")
pathfile2 <- paste(path3, reps[2], fileacc2, sep = "/")
file1 <- fread(pathfile1, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file2 <- fread(pathfile2, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
filemerged <- cbind(file1$gene_id, file1$`transcript_id(s)`, (file1$TPM + file2$TPM)/2)
filemerged <- as.data.frame(filemerged)
pathfilecopy <- paste(path, experimentname, paste(experimentname, ".tsv", sep=""), sep= "/")
fwrite(filemerged, pathfilecopy, nThread = 5)
}
else{
fileacc1 <- system(paste("ls", paste(path3,reps[1], sep ="/" ), sep = " "), intern= T)
fileacc2 <- system(paste("ls", paste(path3,reps[2], sep ="/" ), sep = " "), intern= T)
fileacc3 <- system(paste("ls", paste(path3,reps[3], sep ="/" ), sep = " "), intern= T)
pathfile1 <- paste(path3, reps[1], fileacc1, sep = "/")
pathfile2 <- paste(path3, reps[2], fileacc2, sep = "/")
pathfile3 <- paste(path3, reps[3], fileacc3, sep = "/")
file1 <- fread(pathfile1, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file2 <- fread(pathfile2, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file3 <- fread(pathfile3, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
filemerged <- cbind(file1$gene_id, file1$`transcript_id(s)`, (file1$TPM + file2$TPM + file3$TPM)/3)
filemerged <- as.data.frame(filemerged)
pathfilecopy <- paste(path, experimentname, paste(experimentname, ".tsv", sep=""), sep= "/")
fwrite(filemerged, pathfilecopy, nThread = 5)
}
}
for(tissue in samples[1:3]){
path2 <- paste(path, tissue, sep = "/")
experimentname <- system(paste("ls", path2 , sep = " "), intern= T)
path3 <- paste(path2, experimentname, "released/GRCh38/gene_quantifications/tsv", sep = "/")
reps <- system(paste("ls", path3 , sep = " "), intern= T)
print(reps)
if (length(reps) == 1){
fileacc <- system(paste("ls", paste(path3,reps, sep ="/" ), sep = " "), intern= T)
pathfile <- paste(path3,reps,fileacc ,sep ="/" )
pathfilecopy <- paste(path2, experimentname, paste(experimentname, ".tsv", sep=""), sep= "/")
system(paste("cp", pathfile, pathfilecopy ))
}
else if (length(reps==2)){
fileacc1 <- system(paste("ls", paste(path3,reps[1], sep ="/" ), sep = " "), intern= T)
fileacc2 <- system(paste("ls", paste(path3,reps[2], sep ="/" ), sep = " "), intern= T)
pathfile1 <- paste(path3, reps[1], fileacc1, sep = "/")
pathfile2 <- paste(path3, reps[2], fileacc2, sep = "/")
file1 <- fread(pathfile1, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file2 <- fread(pathfile2, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
filemerged <- cbind(file1$gene_id, file1$`transcript_id(s)`, (file1$TPM + file2$TPM)/2)
filemerged <- as.data.frame(filemerged)
pathfilecopy <- paste(path2, experimentname, paste(experimentname, ".tsv", sep=""), sep= "/")
fwrite(filemerged, pathfilecopy, nThread = 5)
}
else{
fileacc1 <- system(paste("ls", paste(path3,reps[1], sep ="/" ), sep = " "), intern= T)
fileacc2 <- system(paste("ls", paste(path3,reps[2], sep ="/" ), sep = " "), intern= T)
fileacc3 <- system(paste("ls", paste(path3,reps[3], sep ="/" ), sep = " "), intern= T)
pathfile1 <- paste(path3, reps[1], fileacc1, sep = "/")
pathfile2 <- paste(path3, reps[2], fileacc2, sep = "/")
pathfile3 <- paste(path3, reps[3], fileacc3, sep = "/")
file1 <- fread(pathfile1, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file2 <- fread(pathfile2, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file3 <- fread(pathfile3, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
filemerged <- cbind(file1$gene_id, file1$`transcript_id(s)`, (file1$TPM + file2$TPM + file3$TPM)/3)
filemerged <- as.data.frame(filemerged)
pathfilecopy <- paste(path2, experimentname, paste(experimentname, ".tsv", sep=""), sep= "/")
fwrite(filemerged, pathfilecopy, nThread = 5)
}
}
#####################################################################
############ Merging RNA seq experiment replicates###################
#####################################################################
library(data.table)
path <- "/project/CRUP_scores/RNA-seq"
samples <- system(paste("ls", path , sep = " "), intern= T)
for(tissue in samples[1:3]){
path2 <- paste(path, tissue, sep = "/")
experimentname <- system(paste("ls", path2 , sep = " "), intern= T)
path3 <- paste(path2, experimentname, "released/GRCh38/gene_quantifications/tsv", sep = "/")
reps <- system(paste("ls", path3 , sep = " "), intern= T)
print(reps)
if (length(reps) == 1){
fileacc <- system(paste("ls", paste(path3,reps, sep ="/" ), sep = " "), intern= T)
pathfile <- paste(path3,reps,fileacc ,sep ="/" )
pathfilecopy <- paste(path2, experimentname, paste(tissue, ".tsv", sep=""), sep= "/")
system(paste("cp", pathfile, pathfilecopy ))
}
else if (length(reps)==2){
fileacc1 <- system(paste("ls", paste(path3,reps[1], sep ="/" ), sep = " "), intern= T)
fileacc2 <- system(paste("ls", paste(path3,reps[2], sep ="/" ), sep = " "), intern= T)
pathfile1 <- paste(path3, reps[1], fileacc1, sep = "/")
pathfile2 <- paste(path3, reps[2], fileacc2, sep = "/")
file1 <- fread(pathfile1, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file2 <- fread(pathfile2, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
filemerged <- cbind(file1$gene_id, file1$`transcript_id(s)`, as.double((file1$TPM + file2$TPM)/2))
filemerged <- as.data.frame(filemerged)
colnames(filemerged)<- c("gene_id", "transcript_id(s)", "TPM")
pathfilecopy <- paste(path2, experimentname, paste(tissue, ".tsv", sep=""), sep= "/")
fwrite(filemerged, pathfilecopy, nThread = 5)
}
else{
fileacc1 <- system(paste("ls", paste(path3,reps[1], sep ="/" ), sep = " "), intern= T)
fileacc2 <- system(paste("ls", paste(path3,reps[2], sep ="/" ), sep = " "), intern= T)
fileacc3 <- system(paste("ls", paste(path3,reps[3], sep ="/" ), sep = " "), intern= T)
pathfile1 <- paste(path3, reps[1], fileacc1, sep = "/")
pathfile2 <- paste(path3, reps[2], fileacc2, sep = "/")
pathfile3 <- paste(path3, reps[3], fileacc3, sep = "/")
file1 <- fread(pathfile1, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file2 <- fread(pathfile2, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
file3 <- fread(pathfile3, select= c("gene_id", "transcript_id(s)", "TPM"), header=T, nThread = 5)
filemerged <- cbind(file1$gene_id, file1$`transcript_id(s)`, as.double((file1$TPM + file2$TPM + file3$TPM)/3))
filemerged <- as.data.frame(filemerged)
colnames(filemerged)<- c("gene_id", "transcript_id(s)", "TPM")
pathfilecopy <- paste(path2, experimentname, paste(tissue, ".tsv", sep=""), sep= "/")
fwrite(filemerged, pathfilecopy, nThread = 5)
}
}
#####################################################################
############ Merging RNA seq experiment replicates###################
#####################################################################
library(data.table)
path <- "/project/CRUP_scores/RNA-seq"
samples <- system(paste("ls", path , sep = " "), intern= T)
print(samples)
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv")
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv", head =T)
colnames(df)
df$Biosample.term.name
path <- "/project/CRUP_scores/RNA-seq/"
system_com <- system(paste("ls", path, sep = " "), intern=T)
print(row)
for(tissue in sample){
path1 <- paste(path, tissue)
id <- system(paste("ls", path1, sep = " "), intern=T)
row <- df[df$ID == id[1],]
print(row)
}
samples <- system(paste("ls", path, sep = " "), intern=T)
for(tissue in sample){
path1 <- paste(path, tissue)
id <- system(paste("ls", path1, sep = " "), intern=T)
row <- df[df$ID == id[1],]
print(row)
}
for(tissue in samples){
path1 <- paste(path, tissue)
id <- system(paste("ls", path1, sep = " "), intern=T)
row <- df[df$ID == id[1],]
print(row)
}
row <- df[which(df$ID == id[1]),]
for(tissue in samples){
path1 <- paste(path, tissue)
id <- system(paste("ls", path1, sep = " "), intern=T)
row <- df[which(df$ID == id[1]),]
print(row)
}
for(tissue in samples){
path1 <- paste(path, tissue)
id <- system(paste("ls", path1, sep = " "), intern=T)
print(path1)
row <- df[which(df$ID == id[1]),]
print(row)
}
path1 <- paste(path, tissue, sep ="")
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
print(path1)
row <- df[which(df$ID == id[1]),]
print(row)
}
print(id)
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv", head =T)
path <- "/project/CRUP_scores/RNA-seq/"
samples <- system(paste("ls", path, sep = " "), intern=T)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
print(id)
row <- df[which(df$ID == id[1]),]
print(row)
}
df$ID
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
print(id)
row <- df[which(df$Accession == id[1]),]
print(row)
}
colnames(df)
samples <- system(paste("ls", path, sep = " "), intern=T)
summarytemp <- matrix(nrow=0, ncol=9)
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv", head =T)
path <- "/project/CRUP_scores/RNA-seq/"
colnames(df)
samples <- system(paste("ls", path, sep = " "), intern=T)
summarytemp <- matrix(nrow=0, ncol=9)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
row <- c(tissue, roworig[2], pathtomerged, pathtounmerged, roworig[12], roworig[8], "GRCh38", roworig[4])
summarytemp <- rbind(summarytemp, row)
}
sumarytemp[1,]
summarytemp[1,]
summarytemp <- matrix(nrow=0, ncol=8)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
row <- c(tissue, roworig[2], pathtomerged, pathtounmerged, roworig[12], roworig[8], "GRCh38", roworig[4])
summarytemp <- rbind(summarytemp, row)
}
summarytemp[1,]
dfout <- data.frame(summarytemp)
colnames(dfout) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv", row.names = F )
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv", row.names = F )
colnames(dfout) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv", row.names = F )
head(colnames)
head(dfout)
str(dfout)
summarytemp <- matrix(nrow=0, ncol=8)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
row <- c(tissue, as.character(roworig[2]), pathtomerged, pathtounmerged, as.character(roworig[12]), as.character(roworig[8]), "GRCh38", as.character(roworig[4]))
summarytemp <- rbind(summarytemp, row)
}
dfout <- data.frame(summarytemp)
colnames(dfout) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
head(dfout)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
row <- c(tissue, as.character(roworig[2]), pathtomerged, pathtounmerged, as.character(roworig[12]), as.character(roworig[8]), "GRCh38", as.character(roworig[4]))
print(row)
summarytemp <- rbind(summarytemp, row)
}
str(df)
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv", head =T)
i <- sapply(df, is.factor)
df[i] <- lapply(df[i], as.character)
str(df)
path <- "/project/CRUP_scores/RNA-seq/"
colnames(df)
samples <- system(paste("ls", path, sep = " "), intern=T)
summarytemp <- matrix(nrow=0, ncol=8)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
row <- c(tissue, roworig[2], pathtomerged, pathtounmerged, roworig[12], roworig[8], "GRCh38",roworig[4])
print(row)
summarytemp <- rbind(summarytemp, row)
}
dfout <- data.frame(summarytemp)
colnames(dfout) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
head(dfout)
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv", row.names = F )
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv")
str(dfout)
dfout <- data.frame(summarytemp)
colnames(dfout) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
i <- sapply(dfout, is.factor)
dfout[i] <- lapply(dfout[i], as.character)
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv")
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv", head =T)
path <- "/project/CRUP_scores/RNA-seq/"
colnames(df)
samples <- system(paste("ls", path, sep = " "), intern=T)
summarytemp <- matrix(nrow=0, ncol=8)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
row <- c(tissue, roworig[2], pathtomerged, pathtounmerged, roworig[12], roworig[8], "GRCh38",roworig[4])
print(row)
summarytemp <- rbind(summarytemp, row)
}
dfout <- data.frame(summarytemp)
colnames(dfout) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
i <- sapply(dfout, is.factor)
dfout[i] <- lapply(dfout[i], as.character)
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv")
colnames(dfout) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
write.csv(dfout,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv")
colnames(summarytemp) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
write.csv(summarytemp,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv")
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv", head =T)
i <- sapply(df, is.factor)
df[i] <- lapply(df[i], as.character)
str(df)
path <- "/project/CRUP_scores/RNA-seq/"
colnames(df)
samples <- system(paste("ls", path, sep = " "), intern=T)
summarytemp <- matrix(nrow=0, ncol=8)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
row <- c(tissue, roworig[2], pathtomerged, pathtounmerged, roworig[12], roworig[8], "GRCh38",roworig[4])
print(row)
summarytemp <- rbind(summarytemp, row)
}
colnames(summarytemp) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
write.csv(summarytemp,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv",row.names = F)
str(dfout)
summarytemp[i] <- lapply(summarytemp[i], as.character)
df <- read.csv("/project/CRUP_scores/Scripts/RNAseq_ENCODE/RNA-seq_experiments_metadata.tsv", head =T)
i <- sapply(df, is.factor)
df[i] <- lapply(df[i], as.character)
str(df)
path <- "/project/CRUP_scores/RNA-seq/"
colnames(df)
samples <- system(paste("ls", path, sep = " "), intern=T)
summarytemp <- matrix(nrow=0, ncol=8)
for(tissue in samples){
path1 <- paste(path, tissue, sep ="")
id <- system(paste("ls", path1, sep = " "), intern=T)
roworig <- df[which(df$Accession == id[1]),]
pathtomerged <-paste(path1, id[1], paste(tissue, ".tsv", sep=""), sep ="/")
pathtounmerged <- paste(path1, id[1], "released/GRCh38/gene_quantifications/tsv/", sep="/")
files <- c("/project/CRUP_scores/CRUP_scores/ENCODE/Single_ended/Tissues/aorta/H3K4me1/H3K4me1.bam","/project/CRUP_scores/CRUP_scores/ENCODE/Single_ended/Tissues/aorta/H3K4me3/H3K4me3.bam", "/project/CRUP_scores/CRUP_scores/ENCODE/Single_ended/Tissues/aorta/H3K27ac/H3K27ac.bam")
print(row)
summarytemp <- rbind(summarytemp, row)
}
colnames(summarytemp) <- c("Name of sample", "ENCODE Experiment Accession", "Path to merged RNA-seq file", "Path to unmerged RNA-seq folder", "Lab", "Biosample summary", "Assembly", "Assay title")
i <- sapply(summarytemp, is.factor)
summarytemp[i] <- lapply(summarytemp[i], as.character)
write.csv(summarytemp,"/project/CRUP_scores/RNA-seq/summaryRNA-seq.csv",row.names = F)
setwd("/project/CRUP_scores/EPI")
library(devtools)
data <- read.table("example1.txt", sep = "\t")
files <- c("/project/CRUP_scores/CRUP_scores/ENCODE/Single_ended/Tissues/aorta/H3K4me1/H3K4me1.bam", "/project/CRUP_scores/CRUP_scores/ENCODE/Single_ended/Tissues/aorta/H3K4me3/H3K4me3.bam", "/project/CRUP_scores/CRUP_scores/ENCODE/Single_ended/Tissues/aorta/H3K27ac/H3K27ac.bam")
inputs <- "/project/CRUP_scores/CRUP_scores/ENCODE/Single_ended/Tissues/aorta/Controls/input.bam"
metaData <- data.frame(HM = c("H3K4me1","H3K4me3","H3K27ac"),
condition = c(1,1,1), replicate = c(1,1,1),
bamFile = files, inputFile = rep(inputs,3))
load_all()
library(EPI)
compute_features_crup_scores(data, metaData, 2, c("chr1"))
q()
x <- read.table("example1.txt", sep = "\t")
load_all()
library(devtools)
load_all()
chromosomes
x$chr_gene <- gencode[gencode$gene_id %in% x[, 1], 1]
x$gene_tts <- gencode[gencode$gene_id %in% x[, 1], 10]
x$end <- x$gene_tts
x$end[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2] ,] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x <- unfactorize(x)
chromosomes <- unfactorize(chromosomes)
x$end <- x$gene_tts
x$end[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2] ,] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2] ,] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end[(x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2])] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
ccres_enhancer
View(x)
x<- as.data.frame("ENSG00000227232.5", "ENSG00000278267.1")
View(x)
x<- as.data.frame(c("ENSG00000227232.5", "ENSG00000278267.1"))
x$chr_gene <- gencode[gencode$gene_id %in% x[, 1], 1]
x$gene_tts <- gencode[gencode$gene_id %in% x[, 1], 10]
View(x)
x$start_tts <- x$gene_tts
x$start_tts[x$gene_tts <= 50000,] <- 1
x$start_tts[x$gene_tts > 50000,] <- x$start_tts[ x$gene_tts > 50000,] - 50000
x$start_tts[x$gene_tts <= 50000] <- 1
x$start_tts[x$gene_tts > 50000] <- x$start_tts[ x$gene_tts > 50000] - 50000
View(x)
x$end_tts <- x$gene_tts
x$end_tts[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <-
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] - 50000
View(x)
x$end_tts <- x$gene_tts
x$end_tts[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <-
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] + 50000
View(x)
genes_range <- with(x, GenomicRanges::GRanges(chr_gene, IRanges::IRanges(start_tts, end_tts)))
enhancer_ranges<-  with(ccres_enhancer, GenomicRanges::GRanges(V1, IRanges::IRanges(start=new_start,end=new_end)))
overlaps <- GenomicRanges::findOverlaps(genes_range, enhancer_range,
ignore.strand = T)
enhancer_range<-  with(ccres_enhancer, GenomicRanges::GRanges(V1, IRanges::IRanges(start=new_start,end=new_end)))
overlaps <- GenomicRanges::findOverlaps(genes_range, enhancer_range,
ignore.strand = T)
cres_overlaping <-data.frame(gene=hits_crup@from,enhancer=hits_crup@to)
cres_overlaping <-data.frame(gene=overlaps@from,enhancer=overlaps@to)
View(cres_overlaping)
overlaps
genes_range
enhancer_range
gencode
x<- as.data.frame(c(ENSG00000227232.5", "ENSG00000278267.1", "ENSG00000215915.10"))
x<- as.data.frame(c("ENSG00000227232.5", "ENSG00000278267.1", "ENSG00000215915.10"))
x$chr_gene <- gencode[gencode$gene_id %in% x[, 1], 1]
x$gene_tts <- gencode[gencode$gene_id %in% x[, 1], 10]
x<- as.data.frame(c("ENSG00000227232.5", "ENSG00000278267.1", "ENSG00000215915.10"))
x$chr_gene <- gencode[gencode$gene_id %in% x[, 1], 1]
x$gene_tts <- gencode[gencode$gene_id %in% x[, 1], 10]
x$start_tts <- x$gene_tts
x$start_tts[x$gene_tts <= 50000] <- 1
x$start_tts[x$gene_tts > 50000] <- x$start_tts[ x$gene_tts > 50000] - 50000
x$end_tts <- x$gene_tts
x$end_tts[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <-
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] + 50000
x <- unfactorize(chromosomes)
x$end_tts <- x$gene_tts
x$end_tts[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <-
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] + 50000
View(x)
x<- as.data.frame(c("ENSG00000227232.5", "ENSG00000278267.1", "ENSG00000215915.10"))
x <- unfactorize(x)
x$start_tts <- x$gene_tts
x$start_tts[x$gene_tts <= 50000] <- 1
x$start_tts[x$gene_tts > 50000] <- x$start_tts[ x$gene_tts > 50000] - 50000
x<- as.data.frame(c("ENSG00000227232.5", "ENSG00000278267.1", "ENSG00000215915.10"))
View(x)
x <- unfactorize(x)
x$start_tts <- x$gene_tts
x$start_tts[x$gene_tts <= 50000] <- 1
x$start_tts[x$gene_tts > 50000] <- x$start_tts[ x$gene_tts > 50000] - 50000
View(x)
x$chr_gene <- gencode[gencode$gene_id %in% x[, 1], 1]
x$gene_tts <- gencode[gencode$gene_id %in% x[, 1], 10]
x$start_tts <- x$gene_tts
x$start_tts[x$gene_tts <= 50000] <- 1
x$start_tts[x$gene_tts > 50000] <- x$start_tts[ x$gene_tts > 50000] - 50000
x$end_tts <- x$gene_tts
x$end_tts[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <-
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] + 50000
x <- unfactorize(x)
x$end_tts <- x$gene_tts
x$end_tts[x$gene_tts + 50000 > chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <- chromosomes[chromosomes[, 1] == x$chr_gene, 2]
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] <-
x$end_tts[x$gene_tts + 50000 <= chromosomes[chromosomes[, 1] == x$chr_gene, 2]] + 50000
View(x)
chromosomes
x$gene_tts <- gencode[gencode$gene_id %in% x[, 1], 10]
gencode[gencode$gene_id == "
ENSG00000215915.10"]
gencode[gencode$gene_id == "
ENSG00000215915.10",]
gencode[gencode$gene_id == "ENSG00000215915.10",]
1449688 - 50000
1449688 + 50000
genes_range <- with(x, GenomicRanges::GRanges(chr_gene, IRanges::IRanges(start_tts, end_tts)))
enhancer_range<-  with(ccres_enhancer, GenomicRanges::GRanges(V1, IRanges::IRanges(start=new_start,end=new_end)))
overlaps <- GenomicRanges::findOverlaps(genes_range, enhancer_range,
ignore.strand = T)
overlaps
cres_overlaping <-data.frame(gene=overlaps@from,enhancer=overlaps@to)
cres_overlaping
x$`c("ENSG00000227232.5", "ENSG00000278267.1", "ENSG00000215915.10")`[cres_overlaping$gene]
cres_overlaping$gene_id <- x[cres_overlaping$gene,1]
View(cres_overlaping)
cres_overlaping$enhancer_id <- ccres_enhancer$V5[cres_overlaping$enhancer]
View(cres_overlaping)
load_all()
x<- as.data.frame(c("ENSG00000227232.5", "ENSG00000278267.1", "ENSG00000215915.10"))
EPI::distances(x)
load_all()
EPI::distances(x)
load_all()
EPI::distances(x)
load_all()
EPI::distances(x)
EPI::distances(x)
load_all()
EPI::distances(x)
x<- read.table("example1.txt", sep = "\t")
EPI::distances(x)
