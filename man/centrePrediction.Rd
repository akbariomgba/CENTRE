% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/centrePrediction.R
\name{centrePrediction}
\alias{centrePrediction}
\title{CENTRE predicton}
\usage{
centrePrediction(features_celltype, features_generic, model = NULL)
}
\arguments{
\item{features_celltype}{The cell type specific features returned by
\code{CENTRE::computeCellTypeFeatures()}}

\item{features_generic}{The generic features returned by the function
\code{CENTRE::computeGenericFeatures()}}

\item{model}{Path to the model the predictions will be computed on,
The default is the CENTRE model.}
}
\value{
Dataframe containing the enhancer gene pairs and the probability of
them interacting based on CENTRE model
}
\description{
CENTRE predicton
}
\examples{
#Start by providing genes with their ENSEMBL id
candidates <- read.table(system.file("extdata",
                        "exampleids.txt", package = "CENTRE"), header = TRUE)
                        #Remember to give the columns the name "gene_id"
colnames(candidates) <- c("gene_id")
#Generate the candidate pairs
candidate_pairs <- createPairs(candidates)
#Compute the generic features for given names
colnames(candidate_pairs) <- c("gene_id", "enhancer_id")
generic_features <- computeGenericFeatures(candidate_pairs)
## Prepare the data needed for computing cell type features
files <- c(system.file("extdata","HeLa_H3K4me1.bam", package = "CENTRE"),
          system.file("extdata","HeLa_H3K4me3.bam", package = "CENTRE"),
          system.file("extdata","HeLa_H3K27ac.bam", package = "CENTRE"))

inputs <- system.file("extdata", "HeLa_input.bam", package = "CENTRE")

metaData <- data.frame(HM = c("H3K4me1", "H3K4me3", "H3K27ac"),
                     condition = c(1, 1, 1), replicate = c(1, 1, 1),
                     bamFile = files, inputFile = rep(inputs, 3))

#More information on this step is found in the crupR documentation

tpmfile <- read.table(system.file("extdata", "HeLa.tsv", package = "CENTRE"),
                    sep = "", stringsAsFactors = F, header = T)

celltype_features <- computeCellTypeFeatures(metaData,
                                            cores = 1,
                                            "single",
                                            tpmfile,
                                            generic_features)
# Finally compute the predictions
predictions <- centrePrediction(celltype_features,
generic_features)
}
