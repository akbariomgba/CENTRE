% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeCellTypeFeatures.R
\name{computeCellTypeFeatures}
\alias{computeCellTypeFeatures}
\title{Compute cell type specific features}
\usage{
computeCellTypeFeatures(
  metaData,
  condition,
  replicate,
  mapq = 10,
  input.free = FALSE,
  cores,
  sequencing = "single",
  tpmfile,
  featuresGeneric
)
}
\arguments{
\item{metaData}{Dataframe indicating the paths to the ChIP-seq experiments.
More information on the format here \code{crupR::normalize()}}

\item{cores}{Number of cores to compute the CRUP score features}

\item{sequencing}{Type of sequencing of the ChIP-seq experiments "paired" or
"single". The parameter takes single as default}

\item{tpmfile}{Dataframe of two columns one with the RNA-seq TPM values,
one with the names of the genes given as ENSEMBLE ID's}

\item{featuresGeneric}{The output of \code{CENTRE::computeGenericFeatures()}}
}
\value{
A table containting the following computed features :
\itemize{
\item CRUP enhancer score for enhancer region, promoter region and the region
between the enhancer and the promoter
\item CRUP promoter score for enhancer region, promoter region and the region
between the enhancer and the promoter
\item RNA-seq TPM values
}
}
\description{
Computes the cell type specific features needed for the CENTRE classification
step.
}
\examples{
candidates <- read.table(system.file("extdata",
"exampleids.txt", package = "CENTRE"), header = T)

#Remember to give the columns the name "gene_id"
colnames(candidates) <- c("gene_id")

#Generate the candidate pairs
candidate_pairs <- createPairs(candidates)

#Compute the generic features for given names
generic_features <- computeGenericFeatures(candidate_pairs)

## Prepare the data needed for computing cell type
featuresfiles <- c(system.file("extdata","HeLa_H3K4me1.bam", package = "CENTRE"),
                  system.file("extdata","HeLa_H3K4me3.bam", package = "CENTRE"),
                  system.file("extdata","HeLa_H3K27ac.bam", package = "CENTRE"))

inputs <- system.file("extdata", "HeLa_input.bam", package = "CENTRE")
metaData <- data.frame(HM = c("H3K4me1", "H3K4me3", "H3K27ac"),
                       condition = c(1, 1, 1), replicate = c(1, 1, 1),
                       bamFile = files, inputFile = rep(inputs, 3))
#More information on this step is found in the crupR documentation
tpmfile <- read.table(system.file("extdata", "HeLa.tsv", package = "CENTRE"),
                     sep = "", stringsAsFactors = F, header = T)

celltype_features <- computeCellTypeFeatures(metaData,
                                           cores = 1,
                                           "single",
                                           tpmfile,
                                           generic_features)
}
